// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/**
 * 用户模型 - 支持多用户系统
 */
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String   // 加密后的密码
  role      String   @default("user") // 用户角色：user, admin, super_admin
  isActive  Boolean  @default(true)   // 账号是否激活
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 用户自定义的股票关注列表
  watchlist WatchlistItem[]
  
  // 用户收到的投资建议
  recommendations Recommendation[]
  
  // 用户的操作日志
  auditLogs AuditLog[]

  @@map("users")
}

/**
 * 股票基本信息模型
 */
model Stock {
  id          String   @id @default(cuid())
  symbol      String   @unique // 股票代码，如 AAPL, TSLA
  name        String   // 公司名称
  exchange    String   // 交易所，如 NASDAQ, NYSE
  sector      String?  // 行业分类
  industry    String?  // 具体行业
  marketCap   Float?   // 市值
  peRatio     Float?   // 市盈率
  dividendYield Float? // 股息收益率
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联数据
  priceData   StockPrice[]
  watchlistItems WatchlistItem[]
  recommendations Recommendation[]
  technicalIndicators TechnicalIndicator[]

  @@map("stocks")
}

/**
 * 股票价格数据模型
 */
model StockPrice {
  id        String   @id @default(cuid())
  stockId   String
  date      DateTime
  open      Float
  high      Float
  low       Float
  close     Float
  volume    Int
  createdAt DateTime @default(now())

  stock     Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)

  @@unique([stockId, date])
  @@map("stock_prices")
}

/**
 * 技术指标模型
 */
model TechnicalIndicator {
  id        String   @id @default(cuid())
  stockId   String
  date      DateTime
  indicator String   // 指标名称：RSI, MACD, MA20, MA50等
  value     Float
  signal    String?  // 信号：BUY, SELL, HOLD
  createdAt DateTime @default(now())

  stock     Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)

  @@unique([stockId, date, indicator])
  @@map("technical_indicators")
}

/**
 * 用户关注列表模型
 */
model WatchlistItem {
  id        String   @id @default(cuid())
  userId    String
  stockId   String
  addedAt   DateTime @default(now())
  notes     String?  // 用户备注

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stock     Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)

  @@unique([userId, stockId])
  @@map("watchlist_items")
}

/**
 * AI投资建议模型
 */
model Recommendation {
  id          String   @id @default(cuid())
  stockId     String
  userId      String?
  date        DateTime @default(now())
  type        String   // DAILY_OPPORTUNITY, CUSTOM_ANALYSIS
  aiProvider  String?  // AI提供商：openai, anthropic, gemini, ollama, huggingface
  confidence  Float    // 置信度 0-1
  action      String   // BUY, SELL, HOLD
  priceTarget Float?   // 目标价格
  reasoning   String   // AI分析理由
  riskLevel   String   // LOW, MEDIUM, HIGH
  timeHorizon String   // SHORT_TERM, MEDIUM_TERM, LONG_TERM
  createdAt   DateTime @default(now())

  stock       Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("recommendations")
}

/**
 * 系统配置模型
 */
model SystemConfig {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  updatedAt   DateTime @updatedAt

  @@map("system_configs")
} 

model InviteCode {
  id        String   @id @default(cuid())
  code      String   @unique
  used      Boolean  @default(false)
  usedBy    String?
  usedAt    DateTime?
  createdAt DateTime @default(now())
}

/**
 * 操作日志模型
 */
model AuditLog {
  id          String   @id @default(cuid())
  userId      String   // 操作用户ID
  action      String   // 操作类型：CREATE, UPDATE, DELETE, LOGIN, LOGOUT等
  resource    String   // 操作资源：USER, INVITE_CODE, STOCK等
  resourceId  String?  // 资源ID
  details     String?  // 操作详情（JSON格式）
  ipAddress   String?  // IP地址
  userAgent   String?  // 用户代理
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("audit_logs")
} 